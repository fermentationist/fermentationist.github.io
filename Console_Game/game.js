import{primaryFont}from"./prefs.js";import maps from"./maps.js";import mapKeyModule from"./mapkey.js";import itemModule from"./items.js";import commandsList from"./commands.js";import customConsole from"./console_styles.js";const ConsoleGame={maps:[...maps],key:{...mapKeyModule(this)},state:{objectMode:false,saveMode:false,restoreMode:false,prefMode:false,confirmMode:false,inventory:[],history:[],turn:null,pendingAction:null,position:{x:4,y:2,z:3},get currentCell(){return ConsoleGame.maps[this.position.z][this.position.y][this.position.x]},get env(){return ConsoleGame.mapKey[this.currentCell].env}},get mapKey(){return this.key},set mapKey(e){this.key=e},turnDemon:function(e,t){const s=["help","start","commands","inventory","inventorytable","look","font","color","size","save","restore","_save_slot"];try{let o=s.includes(e);if(!o){this.addToHistory(e);if(!this.state.objectMode){this.state.turn++}}return t(e)}catch(e){return console.invalid(`${e}. Please try again.`)}},addToHistory:function(e){this.state.history.push(e);window.localStorage.setItem("ConsoleGame.history",this.state.history)},replayHistory:function(commandList){this.state.restoreMode=false;this.initializeNewGame();console.groupCollapsed("Game loading...");commandList.split(",").map(command=>{return eval(`${command}`)});return console.groupEnd("Game loaded.")},addToInventory:function(e){e.map(e=>{if(e instanceof String){return this.state.inventory.push(this.items[`_${e}`])}return this.state.inventory.push(e)})},removeFromInventory:function(e){this.state.inventory.splice(this.state.inventory.indexOf(e),1)},resetGame:function(){this.state.objectMode=false;this.state.saveMode=false;this.state.restoreMode=false;this.state.prefMode=false;this.state.confirmMode=false;this.state.inventory=[];this.state.history=[];this.state.turn=0;this.state.pendingAction=null;this.state.position={x:4,y:2,z:3};window.localStorage.removeItem("ConsoleGame.history");return},formatList:function(e,t=false){const s=e.length;const o=t?"or":"and";if(s===1){return e[0]}if(s===2){return`${e[0]} ${o} ${e[1]}`}return`${e[0]}, ${this.formatList(e.slice(1),t)}`},cases:function(...e){let t,s;const o=e.map(e=>{t=e.toLowerCase();s=[t,`${t.charAt(0).toUpperCase()}${t.slice(1)}`,t.toUpperCase()];return e.length?s:""});return o.join(",")},possibleMoves:function(e,t,s){const o=["north",maps[e][t-1][s]!=="*"];const n=["south",maps[e][t+1][s]!=="*"];const i=["east",maps[e][t][s+1]!=="*"];const a=["west",maps[e][t][s-1]!=="*"];const r=["up",maps[e+1][t][s]!=="*"];const l=["down",maps[e-1][t][s]!=="*"];let c=[o,n,i,a,r,l];let m=[];c.map(e=>{e[1]?m.push(e[0]):null});return m},movementOptions:function(){return this.formatList(this.possibleMoves(this.state.position.z,this.state.position.y,this.state.position.x),true)},describeSurroundings:function(){const e=this.mapKey[this.state.currentCell].name;const t=this.state.turn;const s=this.mapKey[this.state.currentCell].description;const o=this.itemsInEnvironment()?`You see ${this.itemsInEnvironment()} here.`:"";const n=`You can go ${this.movementOptions()}.`;console.p("\n\n");console.header(this.currentHeader());return console.p(s+"\n"+n+"\n"+o+"\n")},currentHeader:function(e=80){const t=this.mapKey[this.state.currentCell].name;const s=`Turn : ${this.state.turn}`;const o=e-t.length-s.length;const n=" ".repeat(o);return`${t}${n}${s}`},inInventory:function(e){const t=this.state.inventory.map(e=>e.name).indexOf(e);const s=t!==-1&&this.state.inventory[t];return s},inEnvironment:function(e){const t=this.mapKey[this.state.currentCell].env;const s=t.map(e=>e.name).indexOf(e);const o=s!==-1&&this.mapKey[`${this.state.currentCell}`].env[s];return o},itemsInEnvironment:function(){return this.state.env.length&&this.formatList(this.state.env.map(e=>`${e.article} ${e.name}`))},displayItem:function(e,t,s,o){let n=document.getElementById("console-game-content");if(!e){return n.innerHTML=""}let i=document.createElement("object");i.setAttribute("data",e);i.setAttribute("type",t);i.setAttribute("width",s||"600px");i.setAttribute("height",o||"300px");n.innerHTML="";return n.append(i)},_restore:function(e){let t=Object.keys(localStorage);let s=t.filter(e=>{return e.indexOf("ConsoleGame.save")!==-1});if(s.length>0){let t=s.map(e=>{let t=e.substring(e.length-2);return t});console.info(`saved games:\n${t}`);this.state.restoreMode=true;this.state.saveMode=false;this.state.pendingAction=e;const o=`font-size:100%;color:#75715E;font-family:${primaryFont};`;const n=o+`font-weight:bold;color:white`;console.info("Please choose which slot number (0 â€“ 9) to restore from. To restore, type an underscore, immediately followed by the slot number.");return console.inline([`For example, type `,`_3`,` to select slot 3.`],[o,n,o])}return console.info("No saved games found.")},_restoreGame:function(e){this.state.restoreMode=false;let t=localStorage.getItem(`ConsoleGame.save.${e}`);this.resetGame();this.replayHistory(t);return this.describeSurroundings()},_save:function(e){this.state.saveMode=true;this.state.restoreMode=false;this.state.pendingAction=e;const t=`font-size:100%;color:#75715E;font-family:${primaryFont};`;const s=t+`font-weight:bold;color:white`;console.info("Please choose a slot number (_0 through _9) to save your this. To save to the selected slot, type an underscore, immediately followed by the slot number.");console.codeInline([`For example, type `,`_3`,` to select slot 3.`])},_save_slot:function(e){if(this.state.saveMode){try{return this._saveGame(e)}catch(t){console.invalid(`Save to slot ${e} failed.`);return console.trace(t)}}else if(this.state.restoreMode){try{this._restoreGame(e);return this.state.restoreMode=false}catch(t){console.invalid(`Restore from slot ${e} failed.`);return console.trace(t)}}else{console.invalid("Operation failed.")}},_saveGame:function(e){const t=`ConsoleGame.save.${e}`;if(localStorage.getItem(t)){return console.invalid("That save slot is already in use. Please select a different save slot.")}if(!localStorage.getItem(t)){this.state.saveMode=false;try{localStorage.setItem(t,this.state.history);return console.info(`Game saved to slot ${e}.`)}catch(t){return console.invalid(`Save to slot ${e} failed.`)}}},_quit:function(){this.resetGame();location.reload();return"reloading..."},initCommands:function(e){e.map(e=>{let[t,s]=e;this.bindCommandToFunction(t,s)})},bindCommandToFunction:function(e,t,s=this.turnDemon){const o=t.split(",");const n=o[0];if(n in window){return}const i=s?s.bind(this,n,e):e.bind(this,n);try{o.map(e=>{Object.defineProperty(window,e.trim(),{get:i})})}catch(e){console.trace(e)}},bindInitialCommands:function(){const e=[[this._start,this.cases("start","resume")],[this._help,this.cases("help")+",h,H,ayuda"],[this._commands,this.cases("command","commands")],[this._restore,this.cases("restore","load")],[this._quit,this.cases("quit","restart")],[this._save,this.cases("save")],[this._save_slot,"_0,save0,Save0,SAVE0"],[this._save_slot,"_1,save1,Save1,SAVE1"],[this._save_slot,"_2,save2,Save2,SAVE2"],[this._save_slot,"_3,save3,Save3,SAVE3"],[this._save_slot,"_4,save4,Save4,SAVE4"],[this._save_slot,"_5,save5,Save5,SAVE5"],[this._save_slot,"_6,save6,Save6,SAVE6"],[this._save_slot,"_7,save7,Save7,SAVE7"],[this._save_slot,"_8,save8,Save8,SAVE8"],[this._save_slot,"_9,save9,Save9,SAVE9"]];e.map(e=>{const[t,s]=e;this.bindCommandToFunction(t,s,null)})},setPreference:function(e,t){return localStorage.setItem(`ConsoleGame.prefs.${e}`,t)},reloadScript:function(e){const t=document.getElementsByTagName("body")[0];const s=Array.from(document.getElementsByTagName("script"));s.forEach(t=>{let s=t.src.indexOf(e);if(s!==-1){t.remove()}});const o=document.createElement("script");o.src=`assets/js/${e}`;o.type="text/javascript";t.prepend(o);return setTimeout(()=>this.describeSurroundings(),500)},intro:function(){const e="\nWelcome!\nAs a fan of old Infocom interactive fiction games, I thought it would be fun to hide a text adventure in the browser's JavaScript console. This demonstration of the concept is as yet incomplete, but you may try it out by typing in the console below.\n";console.custom(e,"font-size:110%;color:thistle;line-height:1.85;padding:0 1em;");console.codeInline(this.introOptions())},introOptions:function(){const e=["[ Please type ","help ","for instructions, ","commands ","for a list of available commands, ","restore ","to load a saved game, or "];const t=[...e,"resume ","to resume the game. ]"];const s=[...e,"start ","to start the game. ]"];return this.state.turn===null?s:t},stockDungeon:function(e){Object.keys(this.mapKey).map(t=>{let s=this.mapKey[t][e];let o=[];if(s.length){s.map(e=>{let t=typeof e==="string"?this.items[`_${e}`]:e;t?o.push(t):console.log(`Cannot stock ${e}. No such item.`)})}this.mapKey[t][e]=o;return o})},initializeNewGame:function(){this.resetGame();this.initCommands(this.commands);this.stockDungeon("hiddenEnv");this.stockDungeon("visibleEnv");this.items._glove.contents.push(this.items._key);this.addToInventory([this.items._grue_repellant,this.items._no_tea])},_start:function(){if(this.state.turn<1){this.initializeNewGame()}return this.describeSurroundings()},_help:function(){const e=`font-family:${primaryFont};color:thistle;font-size:110%;line-spacing:1.5;`;const t="color:#29E616;font-size:125%;";const s=["Due to the limitations of the browser console as a medium, the commands you may enter can only be one-word long, with no spaces. "];console.codeInline(s,e,null);const o=["However, two-word commands may be constructed on two separate lines. For example, if you wanted to examine the glove, you would first type ","examine ","to which the game would respond ","What is it you would like to examine? ","Then you would type the object of your intended action, ","glove",", to complete the command."];console.codeInline(o,e,t);const n=["Alternately, you may enter both words on the same line, provided they are separated with a semicolon and no spaces, i.e ","examine;glove"];console.codeInline(n,e,t);console.codeInline(this.introOptions(this.state.turn))},_commands:function(){const e=this.commands.map(e=>{const[t,s]=e;return s});const t={};e.forEach(e=>{const s=e.split(",");const[o,n]=[s.shift(),s.join(", ")];t[o]=n});console.table(t)},setPref:function(e){console.info(`value for ${this.state.pendingAction} will be set to ${e}`);this.state.prefMode=false;this.setPreference(`${this.state.pendingAction}`,e);return this.reloadScript("./prefs.js")}};window._=(e=>{return ConsoleGame.setPref(e)});ConsoleGame.items=itemModule(ConsoleGame);ConsoleGame.commands=[...commandsList(ConsoleGame)];ConsoleGame.mapKey={...mapKeyModule(ConsoleGame)};ConsoleGame.bindInitialCommands();export default ConsoleGame;