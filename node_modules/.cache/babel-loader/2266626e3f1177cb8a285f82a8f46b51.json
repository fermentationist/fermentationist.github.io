{"ast":null,"code":"import _classCallCheck from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _taggedTemplateLiteral from \"/Users/fermentationist/Repos/fermentationist.github.io/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/fermentationist/Repos/fermentationist.github.io/src/components/Burger.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    cursor: pointer;\\n    background: transparent;\\n    border: none;\\n    outline: none;\\n    \\n    .burger-bar {\\n        height: 4px;\\n        width: 28px;\\n        background-color: \", \";\\n        transition: 0.2s ease-in-out;\\n        margin: 4px 5px 0 5px;\\n        padding: 0;\\n        border-radius: 3px;\\n    }\\n\\n    div.burger-bar1.toggled{\\n        opacity: 0.75;\\n        transform: translate(0, 8px) rotate(225deg);\\n    }\\n\\n    div.burger-bar2.toggled{\\n        transform: scale(0.25);\\n        opacity: 0;\\n        background-color: red;\\n    }\\n\\n    div.burger-bar3.toggled{\\n        opacity: 0.75;\\n        transform: translate(0, -8px) rotate(-225deg);\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport Toggle from \"./Toggle\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\"; // used styled components to create a component with scoped css\n\nvar StyledBurger = styled.button(_templateObject(), function (props) {\n  return props.theme.navTextColor;\n}); // used Pose, Popmotion library, to apply animation effects to styled component\n\nvar PosedBurger = posed(StyledBurger)({\n  open: {\n    display: \"inline\",\n    // x: \"-30vw\",\n    transition: {\n      duration: 500\n    }\n  },\n  closed: {\n    x: \"0\",\n    transition: {\n      duration: 500\n    }\n  }\n}); // used Pose to create a div container to control hiding/showing of burger menu\n\nvar PosedDiv = posed.div({\n  open: {\n    display: \"block\",\n    opacity: 1,\n    transition: {\n      duration: 666\n    }\n  },\n  closed: {\n    opacity: 0,\n    transition: {\n      duration: 666\n    }\n  }\n}); // make burger component a toggle switch that can be passed a callback \n\nvar BurgerToggle = Toggle(PosedBurger);\n\nvar BurgerButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerButton, _Component);\n\n  function BurgerButton(props) {\n    var _this;\n\n    _classCallCheck(this, BurgerButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BurgerButton).call(this, props));\n    _this.callback = _this.props.callback ? _this.props.callback.bind(_assertThisInitialized(_assertThisInitialized(_this))) : null;\n    _this.clickHandler = _this.clickHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BurgerButton, [{\n    key: \"clickHandler\",\n    value: function clickHandler(event) {\n      var _this2 = this;\n\n      this.setState({\n        toggled: !this.props.open\n      }, function () {\n        return _this2.callback ? _this2.callback(event) : event;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(BurgerToggle, {\n        className: \"burger burger-button\",\n        onClick: this.clickHandler,\n        callback: this.props.callback,\n        pose: this.props.open ? \"open\" : \"closed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"burger burger-bar burger-bar1 \".concat(this.props.open ? \"toggled\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"burger burger-bar burger-bar2 \".concat(this.props.open ? \"toggled\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"burger burger-bar burger-bar3 \".concat(this.props.open ? \"toggled\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(PosedDiv, {\n        className: \"child-div\",\n        pose: this.props.pose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.children));\n    }\n  }]);\n\n  return BurgerButton;\n}(Component);\n\nexport default BurgerButton;","map":{"version":3,"sources":["/Users/fermentationist/Repos/fermentationist.github.io/src/components/Burger.js"],"names":["React","Component","Toggle","styled","posed","StyledBurger","button","props","theme","navTextColor","PosedBurger","open","display","transition","duration","closed","x","PosedDiv","div","opacity","BurgerToggle","BurgerButton","callback","bind","clickHandler","event","setState","toggled","pose","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Toggle from \"./Toggle\";\nimport styled from \"styled-components\";\nimport posed from \"react-pose\";\n\n// used styled components to create a component with scoped css\nconst StyledBurger = styled.button`\n    cursor: pointer;\n    background: transparent;\n    border: none;\n    outline: none;\n    \n    .burger-bar {\n        height: 4px;\n        width: 28px;\n        background-color: ${props => props.theme.navTextColor};\n        transition: 0.2s ease-in-out;\n        margin: 4px 5px 0 5px;\n        padding: 0;\n        border-radius: 3px;\n    }\n\n    div.burger-bar1.toggled{\n        opacity: 0.75;\n        transform: translate(0, 8px) rotate(225deg);\n    }\n\n    div.burger-bar2.toggled{\n        transform: scale(0.25);\n        opacity: 0;\n        background-color: red;\n    }\n\n    div.burger-bar3.toggled{\n        opacity: 0.75;\n        transform: translate(0, -8px) rotate(-225deg);\n    }\n`;\n\n// used Pose, Popmotion library, to apply animation effects to styled component\nconst PosedBurger = posed(StyledBurger)({\n    open: {\n        display: \"inline\",\n        // x: \"-30vw\",\n        transition: { duration: 500 },\n    },\n    closed: {\n        x: \"0\",\n        transition: { duration: 500 },\n    },\n});\n\n// used Pose to create a div container to control hiding/showing of burger menu\nconst PosedDiv = posed.div({\n    open: {\n        display: \"block\",\n        opacity: 1,\n        transition: { duration: 666 },\n    },\n    closed: {\n        opacity: 0,\n        transition: { duration: 666 },\n    },\n});\n\n// make burger component a toggle switch that can be passed a callback \nconst BurgerToggle = Toggle(PosedBurger);\n\nclass BurgerButton extends Component {\n    constructor(props) {\n        super(props);\n        this.callback = this.props.callback ? this.props.callback.bind(this) : null;\n        this.clickHandler = this.clickHandler.bind(this);\n    }\n    clickHandler(event) {\n        this.setState({\n            toggled: !this.props.open\n        },\n            () => this.callback ? this.callback(event) : event\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <BurgerToggle className=\"burger burger-button\" onClick={this.clickHandler} callback={this.props.callback} pose={this.props.open ? \"open\" : \"closed\"}>\n                    <div className={`burger burger-bar burger-bar1 ${this.props.open ? \"toggled\" : \"\"}`}></div>\n                    <div className={`burger burger-bar burger-bar2 ${this.props.open ? \"toggled\" : \"\"}`}></div>\n                    <div className={`burger burger-bar burger-bar3 ${this.props.open ? \"toggled\" : \"\"}`}></div>\n                </ BurgerToggle>\n                <PosedDiv className=\"child-div\" pose={this.props.pose}>\n                    {this.props.children}\n                </PosedDiv>\n            </ React.Fragment>\n        );\n    }\n}\n\nexport default BurgerButton;"]},"metadata":{},"sourceType":"module"}